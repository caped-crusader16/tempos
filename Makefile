##
# Copyright (C) 2009 RenÃª de Souza Pinto
# TempOS - Tempos is an Educational and multi purpose Operating System
#
# Makefile - TempOS Build System
#

PWD := $(shell pwd)


# Default files and dirs
kimage     := tempos.elf
fimage     := floppy.img

conffile   := .config
config_def := scripts/config.default
config_mk  := scripts/Makefile.config
config_h   := include/config.h

objlist    := objs.list

checkarch  := scripts/checkarch.sh

ECHO       := $(shell which echo)


# Default values
CC = gcc
LD = ld
CFLAGS = -Wall

# Compilation tools
DEPTOOL  := scripts/deptool.sh


# Export all variables
export

# Pseudo rules
.PHONY: showtitle clean


all: showtitle tempos

showtitle:
	@$(ECHO) " ===================== "
	@$(ECHO) "[ TempOS Build System ]"
	@$(ECHO) " ===================== "

tempos: $(config_mk)
	@[ -f $(objlist) ] && rm -f $(objlist) || echo " * Sanity check"
	@$(ECHO) -n " * Checking architecture..."
	@$(checkarch) $(conffile)

##
# Read configuration file and generate proper files
#
$(config_mk): $(conffile)
	@$(ECHO) " ====================== "
	@$(ECHO) "[ TempOS Configuration ]"
	@$(ECHO) " ====================== "
	@$(ECHO) " + READING $(conffile)"
	 
	@$(ECHO) " + WRITING $(config_mk)"
	@$(ECHO) -e "##\n# This file was automatic generated by TempOS Build System\n# WARNING: Do not edit.\n#\n" > $(config_mk)
	@sed -n "s/ \{0,\}\(\w\+\) \{0,\}= \{0,\}\(.*\)/\1=\2\\nexport \1/gp" $(conffile) >> $(config_mk)

	@$(ECHO) " + WRITING $(config_h)"
	@$(ECHO) -e "/**\n * This file was automatic generated by TempOS Build System\n * WARNING: Do not edit.\n **/\n" > $(config_h)
	@$(ECHO) -e "#ifndef TEMPOS_CONFIG_H\n\n\t#define TEMPOS_CONFIG_H\n" >> $(config_h)
	@sed -n "s/ \{0,\}\(\w\+\) \{0,\}= \{0,\}\(.*\)/\t#define \1 \2/gp" $(conffile) >> $(config_h)
	@$(ECHO) -e "\n#endif /* TEMPOS_CONFIG_H */\n" >> $(config_h)

#$(config_mk): config
-include $(config_mk)

##
# Use a default configuration file
#
$(conffile):
	@$(ECHO) "****************************************************************************"
	@$(ECHO) "* WARNING: Kernel build configuration file not found. Use default options. *"
	@$(ECHO) "****************************************************************************"
	@cp $(config_def) $(conffile)


##
# test
#
test: showtitle
	@$(ECHO) -n " * Checking architecture..."
	@[ -f "$(fimage)" ] && ($(checkarch) $(conffile) test) \
		|| ($(ECHO) -e "!\n * Running make..."; $(MAKE) --quiet install && $(MAKE) --quiet test)


##
# install
#
install: showtitle tempos
	@$(ECHO) -n " * Checking architecture..."
	@$(checkarch) $(conffile) install


##
# clean
#
clean: showtitle
	@$(ECHO) "Cleaning..."
	@$(ECHO) -n " * Checking architecture..."
	@$(checkarch) $(conffile) clean
# These rules should stay after architecture clean
	@[ -f $(config_mk) ] && (rm -f $(config_mk) && $(ECHO) " - Remove $(config_mk)") || $(ECHO) " ! $(config_mk) not found."
	@[ -f $(config_h) ] && (rm -f $(config_h) && $(ECHO) " - Remove $(config_h)") || $(ECHO) " ! $(config_h) not found."
	@$(ECHO) done.

